summarise(LossesPerTeam = n())
View(redTeamLosses)
teamWins <- blueTeamWins %>%
#<- data.frame(teamTags = teamNames$teamTags, wins = "", losses = "", winLossRatio = "") %>%
left_join(redTeamWins, by = c("blueTeamTag" = "redTeamTag"))
View(teamWins)
teamLosses <- blueTeamLosses %>%
#<- data.frame(teamTags = teamNames$teamTags, wins = "", losses = "", winLossRatio = "") %>%
left_join(redTeamLosses, by = c("blueTeamTag" = "redTeamTag"))
View(teamLosses)
teamWinLossRatio <- teamWins %>%
left_join(teamLosses, by = c("blueTeamTag" = "blueTeamTag")) %>%
mutate(TotalWins = (teamWinLossRatio$WinsPerTeam.x + teamWinLossRatio$WinsPerTeam.y)) %>%
mutate(TotalLosses = (teamWinLossRatio$LossesPerTeam.x + teamWinLossRatio$LossesPerTeam.y)) %>%
mutate(TotalGames = teamWinLossRatio$TotalWins + teamWinLossRatio$TotalLosses) %>%
mutate(WinRatio = teamWinLossRatio$TotalWins / teamWinLossRatio$TotalGames)
View(teamWinLossRatio)
g <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g
#find the games with Baron results
gamesWithBaronData <- X_LeagueofLegends %>%
select(blueTeamTag, bResult, rResult, redTeamTag, bBarons, rBarons)
View(gamesWithBaronData)
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData %>%
filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData %>%
filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
#find the games with Baron results
gamesWithBaronData <- X_LeagueofLegends %>%
select(blueTeamTag, bResult, rResult, redTeamTag, bBarons, rBarons)
View(gamesWithBaronData)
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData %>%
filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData #%>%
#filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
View(gamesWithBaron)
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData #%>%
#filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
View(gamesWithBaron)
#filter out games where no team got baron
gamesWithBaron <- gamesWithBaronData %>%
filter(!(gamesWithBaron$bBarons == '[]' & gamesWithBaron$rBarons == '[]'))
View(gamesWithBaron)
#give each team a baron score, based on how many barons they have slain
gamesWithBaronScores <- gamesWithBaron %>%
#mutate(bBaronsNoBrackets = gsub("\\[|\\]", "", gamesWithBaron$bBarons), rBaronsNoBrackets = gsub("\\[|\\]", "", gamesWithBaron$rBarons))
mutate(bBaronScore = 0, rBaronScore = 0)
#x = strsplit(gamesWithBaronNoBrackets$bBaronsNoBrackets, ", ")
x = gamesWithBaronScores$bBarons;
y = gamesWithBaronScores$rBarons;
for(i in 1:length(x))
{
#each time there is a comma, add one to baron score
if(x[i] != '[]')
{
gamesWithBaronScores$bBaronScore[i] = (str_count(x[i], "\\,") + 1)
}
}
library(mdsr)
library(stringr)
#give each team a baron score, based on how many barons they have slain
gamesWithBaronScores <- gamesWithBaron %>%
#mutate(bBaronsNoBrackets = gsub("\\[|\\]", "", gamesWithBaron$bBarons), rBaronsNoBrackets = gsub("\\[|\\]", "", gamesWithBaron$rBarons))
mutate(bBaronScore = 0, rBaronScore = 0)
#x = strsplit(gamesWithBaronNoBrackets$bBaronsNoBrackets, ", ")
x = gamesWithBaronScores$bBarons;
y = gamesWithBaronScores$rBarons;
for(i in 1:length(x))
{
#each time there is a comma, add one to baron score
if(x[i] != '[]')
{
gamesWithBaronScores$bBaronScore[i] = (str_count(x[i], "\\,") + 1)
}
}
for(i in 1:length(y))
{
#each time there is a comma, add one to baron score
if(y[i] != '[]')
{
gamesWithBaronScores$rBaronScore[i] = (str_count(y[i], "\\,") + 1)
}
}
View(gamesWithBaronScores)
#count of the amount of barons per team on BLUE SIDE
blueTeamBarons <- gamesWithBaronScores %>%
select(blueTeamTag, bBaronScore) %>%
group_by(blueTeamTag) %>%
summarise(baronsPerTeam = sum(bBaronScore))
View(blueTeamBarons)
#count of the amount of barons per team on RED SIDE
redTeamBarons <- gamesWithBaronScores %>%
select(redTeamTag, rBaronScore) %>%
group_by(redTeamTag) %>%
summarise(baronsPerTeam = sum(rBaronScore))
View(redTeamBarons)
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
teamBaronScore <- blueTeamBarons #%>%
#left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
#mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
View(teamBaronScore)
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) #%>%
#mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
View(teamBaronScore)
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
View(teamBaronScore)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio
g_BaronScores <- ggplot(data = teamBaronScore, aes(x = teamBaronScore$blueTeamTag, y = teamBaronScore$TotalBarons)) + geom_bar(stat = "identity")
g_BaronScores
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(..., expand = waiver(), position = "bottom")
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(expand = waiver(), position = "bottom")
g_WinRatio
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(expand = 10, position = "bottom")
g_WinRatio
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(expand = (10,10), position = "bottom")
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(expand = (10), position = "bottom")
g_WinRatio
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity") + scale_x_discrete(expand = (0, 10), position = "bottom")
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = (1,1))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(1,1))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(10,10))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(10,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(1,10))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(10,10))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_y_discrete(aes(y = teamWinLossRatio$blueTeamTag), expand = c(0,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(1,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.0001,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.5,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.2,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(1,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.05,0))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.05,10))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.05,100))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.05,-100))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.01,100))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0.01,0.01))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + theme(text = element_text(size = 15))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + theme(text = element_text(size = 0.01))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + theme(text = element_text(size = 0.5))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + theme(text = element_text(size = 1))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio +  scale_x_discrete( labels = function( labels ) { fixedLabels <- c() for ( l in 1:length( labels ) ) { fixedLabels <- c( fixedLabels, paste0( ifelse( l %% 2 == 0, '', '\n' ), labels[l] ) ) } return( fixedLabels ) } )
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio +  scale_x_discrete( labels = function( labels ) { fixedLabels <- c() for ( l in 1:length( labels ) ) { fixedLabels <- c( fixedLabels, paste0( ifelse( l %% 2 == 0, '', '\n' ), labels[l] ) ) } return( fixedLabels ) } )
g_BaronScores <- ggplot(data = teamBaronScore, aes(x = teamBaronScore$blueTeamTag, y = teamBaronScore$TotalBarons)) + geom_bar(stat = "identity", position="dodge"))
g_BaronScores <- ggplot(data = teamBaronScore, aes(x = teamBaronScore$blueTeamTag, y = teamBaronScore$TotalBarons)) + geom_bar(stat = "identity", position="dodge")
g_BaronScores
g_BaronScores <- ggplot(data = teamBaronScore, aes(x = teamBaronScore$blueTeamTag, y = teamBaronScore$TotalBarons)) + geom_bar(stat = "identity")
g_BaronScores
install.packages("ggrepel")
library(mdsr)
library(stringr)
library(ggrepel)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel()
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio), label = x)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag), label = x)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio$blueTeamTag))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_text_repel(aes(x = teamWinLossRatio$blueTeamTag), label = row.names(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + coord_flip()
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
lim <- c(0, max(teamWinLossRatio$WinRatio) + 6)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + coord_flip() + scale_y_discrete(expand = c(0, 0), limits = lim)
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
lim <- c(0, max(teamWinLossRatio$WinRatio) + 6)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + coord_flip() + scale_y_discrete(expand = c(0, 3), limits = lim)
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
lim <- c(0, max(teamWinLossRatio$WinRatio) + 6)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + coord_flip() + scale_y_discrete(expand = c(3, 0), limits = lim)
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
lim <- c(0, max(teamWinLossRatio$WinRatio) + 30)
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio + coord_flip() + scale_y_discrete(expand = c(0, 0), limits = lim)
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_WinRatio <- ggplot(data = teamWinLossRatio, aes(x = teamWinLossRatio$blueTeamTag, y = teamWinLossRatio$WinRatio)) + geom_bar(stat = "identity")
g_WinRatio
#+ coord_flip() + scale_y_discrete(expand = c(0, 0), limits = lim)
# + ggrepel::geom_label_repel(aes(x = teamWinLossRatio$blueTeamTag), label = rownames(teamWinLossRatio))
#theme(text = element_text(size = 10))
#scale_x_discrete(aes(x = teamWinLossRatio$blueTeamTag), expand = c(0,0.6))
g_BaronScores <- ggplot(data = teamBaronScore, aes(x = teamBaronScore$blueTeamTag, y = teamBaronScore$TotalBarons)) + geom_bar(stat = "identity")
g_BaronScores
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y)) %>%
mutate(TotalGames = teamWinLossRatio$TotalGames, baronsPerGame = TotalBarons / TotalGames)
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y)) #%>%
#mutate(TotalGames = teamWinLossRatio$TotalGames, baronsPerGame = TotalBarons / TotalGames)
View(teamBaronScore)
teamWinLossRatio <- teamWins %>%
left_join(teamLosses, by = c("blueTeamTag" = "blueTeamTag")) %>%
mutate(TotalWins = (teamWinLossRatio$WinsPerTeam.x + teamWinLossRatio$WinsPerTeam.y)) %>%
mutate(TotalLosses = (teamWinLossRatio$LossesPerTeam.x + teamWinLossRatio$LossesPerTeam.y)) %>%
mutate(TotalGames = teamWinLossRatio$TotalWins + teamWinLossRatio$TotalLosses) %>%
mutate(WinRatio = teamWinLossRatio$TotalWins / teamWinLossRatio$TotalGames)
View(teamWinLossRatio)
teamBaronScore <- blueTeamBarons %>%
left_join(redTeamBarons, by = c("blueTeamTag" = "redTeamTag")) %>%
mutate(TotalBarons = (teamBaronScore$baronsPerTeam.x + teamBaronScore$baronsPerTeam.y))
#mutate(TotalGames = teamWinLossRatio$TotalGames, baronsPerGame = TotalBarons / TotalGames)
View(teamBaronScore)
teamsData <- teamBaronScore %>%
left_join(teamWinLossRatio, by = c("blueTeamTag" = "blueTeamTag"))
View(teamsData)
teamsData <- teamBaronScore %>%
left_join(teamWinLossRatio, by = c("blueTeamTag" = "blueTeamTag")) %>%
mutate(baronsPerGame = TotalBarons / TotalGames)
View(teamsData)
g_BaronAverage <- ggplot(data = teamsData, aes(x = teamsData$blueTeamTag, y = teamsData$baronsPerGame)) + geom_bar(stat = "identity")
g_BaronAverage
View(X_Columns)
View(X_LeagueofLegends)
j = mean(X_LeagueofLegends$gamelength)
print("The average length of these games was: " + j)
j = mean(X_LeagueofLegends$gamelength)
paste("The average length of these games was: " + j)
j = mean(X_LeagueofLegends$gamelength)
paste("The average length of these games was: ", j, collapse = "")
j = mean(X_LeagueofLegends$gamelength)
paste("The average length of these games (in minutes) was:", j, collapse = "")
j = mean(X_LeagueofLegends$gamelength)
paste("The average length of these games (in minutes) was: ", j, collapse = "")
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(y = X_LeagueofLegends$gamelength) ) + geom_point()
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_point()
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot()
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot(binwidth = 1.5) +
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot(binwidth = 1.5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot(binwidth = 1.0)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot(binwidth = 1.25)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_dotplot(binwidth = 1.5)
g_gameLengths
library(mdsr)
library(stringr)
library(ggrepel)
j = mean(X_LeagueofLegends$gamelength)
paste("The average length of these games (in minutes) was: ", j, collapse = "")
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 1.5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 1.5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 2.5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 1.5)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 2)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 1)
g_gameLengths
#make a scatterplot of the game durations
g_gameLengths <- ggplot(data = X_LeagueofLegends, aes(x = X_LeagueofLegends$gamelength) ) + geom_histogram(binwidth = 1.5)
g_gameLengths
library(mdsr)
library(stringr)
library(ggrepel)
library(boot)
View(X_LeagueofLegends)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = X_LeagueofLegends, statistic = rsq,
R=1000, formula = mpg~wt + disp)
library(mdsr)
library(stringr)
library(ggrepel)
library(boot)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = X_LeagueofLegends, statistic = rsq,
R=1000, formula = mpg~wt + disp)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = X_LeagueofLegends, statistic = rsq,
R=1000, formula = 0 + 1)
View(X_Columns)
View(X_LeagueofLegends)
View(teamBaronScore)
View(teamsData)
View(teamBaronScore)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamBaronScore, statistic = rsq,
R=1000, formula = 0 + 1)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamBaronScore, statistic = rsq,
R=1000, formula = TotalBarons + 0)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamBaronScore, statistic = rsq,
R=1000, formula = teamBaronScore$TotalBarons + 0)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamBaronScore, statistic = rsq,
R=1000, formula = teamBaronScore$TotalBarons)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamBaronScore, statistic = rsq,
R=1000, formula = teamBaronScore$TotalBarons~teamWinLossRatio$WinRatio)
View(teamsData)
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamsData, statistic = rsq,
R=1000, formula = teamsData$WinRatio~teamsData$baronsPerGame)
results
plot(results)
boot.ci(results, type = "bca")
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamsData, statistic = rsq,
R=1000, formula = teamsData$WinRatio~teamsData$baronsPerGame + 1)
results
plot(results)
boot.ci(results, type = "bca")
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamsData, statistic = rsq,
R=1000, formula = teamsData$WinRatio~teamsData$baronsPerGame)
results
plot(results)
boot.ci(results, type = "bca")
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamsData, statistic = rsq,
R=1000, formula = teamsData$WinRatio~teamsData$baronsPerGame + teamsData$TotalBarons)
results
plot(results)
boot.ci(results, type = "bca")
#Let's get our bootstrap confidence interval. 95%
rsq <- function(formula, data, indices)
{
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data = d)
return(summary(fit)$r.square)
}
results <- boot(data = teamsData, statistic = rsq,
R=1000, formula = teamsData$WinRatio~teamsData$baronsPerGame)
results
plot(results)
boot.ci(results, type = "bca")
